{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","Pages/NewQuotes.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","Pages/QuoteDetails.js","components/layout/MainNavigation.js","components/layout/Layout.js","Pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","sort","quotesA","quotesB","sorting","onClick","console","log","push","pathname","list","map","quote","LoadingSpinner","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","NoQuotesFound","noquotes","AllQuotes","useEffect","length","Card","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","onFocus","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","commentAdded","comment","trim","CommentItem","CommentsList","comments","Comments","isAddingComment","setIsAddingComment","allComments","useParams","getCommentsAfterAdd","HighlightedQuote","QuoteDetails","params","route_match","useRouteMatch","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8b958f0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import {Link} from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nimport { useHistory, useLocation } from 'react-router-dom';\n\nfunction sortQuotes(quotes, ascending){\n  return quotes.sort((quotesA, quotesB)=>{\n    if(ascending){\n      return quotesA.author > quotesB.author ? 1 : -1;\n    }else{\n      return quotesA.author > quotesB.author ? -1 : 1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  //console.log(location);\n  const queryParams = new URLSearchParams(location.search);\n  const isAscending = queryParams.get('sort')==='asc';\n  \n\n  const sortedQuotes = sortQuotes(props.quotes, isAscending);\n\n  //console.log(isAscending,sortedQuotes);\n\n  const changeSortingHandler = ()=>{\n    console.log('change');\n\n\n    if(isAscending){\n      history.push(`${location.pathname}?sort=desc`);\n    }else{\n      history.push(`${location.pathname}?sort=asc`);\n    };\n  };\n  return (\n    <Fragment>\n    <div className={classes.sorting}>\n      <button onClick={changeSortingHandler}>{isAscending ? 'sort desc' : 'sort asc'}</button>\n    </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      console.log('sending req');\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quotes-56507-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  //console.log(quoteId);\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n  //console.log(response,'$$$$$$$$$$$$$$$$$$');\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      text:data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to={'/new-quote'}>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\n\n\nfunction AllQuotes() {\n    const { sendRequest, status, data:  quotes,error } = useHttp(getAllQuotes,true);\n    console.log('quotes', status, quotes);\n\n    useEffect(() => {\n        console.log('all quotes use efrfect');\n        sendRequest();\n    }, [sendRequest]);\n\n    if(status === 'pending'){\n        return (<div className=\"centered\">\n            <LoadingSpinner/>\n        </div>);\n    };\n\n    if(error){\n        return <p className=\"centered focused\">{error}</p>;\n    };\n\n    if (status === 'completed' && (!quotes || quotes.length===0)){\n        return <NoQuotesFound/>;\n    }\n\n    console.log('####',status,quotes);\n    return (\n        <>\n            <QuoteList quotes={quotes} />\n        </>\n    );\n};\n\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n \n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  function formFocusHandler(){\n    setIsEntering(true);\n  };\n\n  function finishEnteringHandler(){\n    setIsEntering(false);\n  };\n\n  return (\n    <>\n    <Prompt when={isEntering} message={(location)=>'Are you sure to leave!!!'}/>\n      <Card>\n      <form className={classes.form} onSubmit={submitFormHandler}  onFocus={formFocusHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn' onClick={finishEnteringHandler}>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nimport QuoteForm from \"../components/quotes/QuoteForm\";\n\nimport useHttp from \"../hooks/use-http\";\nimport {addQuote} from '../lib/api';\n\n\n\nfunction NewQuote(){\n    console.log('quote new');\n    const {sendRequest,status} = useHttp(addQuote);\n    //console.log(history);\n    const history = useHistory();\n    \n    \n    const addQuoteHandler = (quoteData)=>{\n        sendRequest(quoteData);\n    };\n\n    useEffect(()=>{\n        if(status === 'completed'){\n            history.push('/quotes?sort=asc');\n        };\n    },[status,history]);\n\n    return (\n        <QuoteForm isLoading={status==='pending'} onAddQuote={addQuoteHandler}/>\n    );\n};\n\nexport default NewQuote;","import { useRef , useEffect} from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const {sendRequest,status,data} = useHttp(addComment);\n  //console.log('commentform',data,status);\n\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    let comment = commentTextRef.current.value.trim();\n\n    if(comment){\n      //console.log(comment);\n      sendRequest({commentData : comment, quoteId: props.quoteId});\n    }\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  useEffect(()=>{\n    if(status === 'completed'){\n      props.commentAdded();\n      commentTextRef.current.value = '';\n    }\n  },[status]);\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} >\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport useHttp from '../../hooks/use-http';\nimport {getAllComments} from '../../lib/api';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const {sendRequest, data: allComments , error , status} = useHttp(getAllComments);\n  \n  console.log('comments',allComments,status);\n  const params = useParams();\n  const {quoteId} = params; \n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const getCommentsAfterAdd = useCallback(()=>{\n    sendRequest(quoteId);\n  },[quoteId,sendRequest]);\n\n  useEffect(()=>{\n    sendRequest(quoteId);\n  },[quoteId, sendRequest]);\n  let comments = null;\n  if(error){\n    comments = <p className='centered'> {error}</p>;\n  };\n\n  if(status === 'pending'){\n    comments = <div className='centered'><LoadingSpinner/></div>;\n  };\n\n  if(status === 'completed' && allComments.length >0 && allComments ){\n    comments = <CommentsList comments = {allComments}/>\n  };\n\n  if(status === 'completed' && (!allComments || allComments.length ===0)){\n    comments = <p className='centered'>No comments on this post !!</p>\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} commentAdded={getCommentsAfterAdd}/>}\n      <div>{comments}</div>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Link } from 'react-router-dom';\nimport {useParams, Route, useRouteMatch} from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport useHttp from '../hooks/use-http';\nimport {getSingleQuote} from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { useEffect } from 'react';\n\nconst DUMMY_QUOTES = [\n    {id:'q1', author:'Aparna', text:'JS is single threaded'},\n    {id:'q2', author:'Divyanshu', text:'JS is single asynchronous'},\n];\n\n\nfunction QuoteDetails(){\nconst params = useParams();\nconst {quoteId} = params;\n\nconst {sendRequest,error,data:quote,status} = useHttp(getSingleQuote,true);\nconst route_match = useRouteMatch();\n//console.log(quote,status,error);\n//const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\nuseEffect(()=>{\n    sendRequest(quoteId);\n},[quoteId, sendRequest]);\n\nif(status ==='pending'){\n    return (\n        <div className='centered'>\n            <LoadingSpinner/>\n        </div>\n    );\n};\n\n\nif(error){\n    return (\n        <div className='centered'>\n        {error}\n    </div>\n    );\n}\n\nif(!('author' in quote)){\n    return (<div className='centered'>\n        <h1>No Quote found !!</h1>\n    </div>);\n};\n\n\nreturn (\n    <>\n        <HighlightedQuote text={quote.text} author={quote.author}/>\n        <Route path={`/quotes/${params.quoteId}`} exact>\n            <div className='centered'>\n                <Link className='btn--flat' to={`${route_match.url}/comments`}>\n                    Load Comments\n                </Link>\n            </div>\n        </Route>\n        <Route path={`${route_match.path}/comments`}>\n            <Comments/>\n        </Route>\n    </>\n);\n};\n\nexport default QuoteDetails;","import { NavLink } from 'react-router-dom';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = ()=>{\n    return (\n        <header className={classes.header}>\n            <div className={classes.logo}>Great Quotes</div>\n            <nav className={classes.nav}>\n                <ul>\n                    <li>\n                        <NavLink to='/quotes?sort=asc' activeClassName={classes.active}>\n                            All Quotes\n                        </NavLink>\n                       \n                    </li>\n                    <li>\n                        <NavLink to='/new-quote' activeClassName={classes.active}>\n                            Add a Quote\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default MainNavigation;","import classes from './Layout.module.css';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props)=>{\n    return (\n        <>\n        <MainNavigation></MainNavigation>\n        <main className={classes.main}>{props.children}</main>\n    </>\n    );\n};\n\nexport default Layout;","import './NotFound.css';\n\nconst NotFound = ()=>{\n    return (\n        <div className=\"not-found\">\n            <p className=\"content\">Page Not found</p>\n        </div>\n    );\n};\n\nexport default NotFound;","import AllQuotes from \"./Pages/AllQuotes\";\nimport NewQuote from \"./Pages/NewQuotes\";\nimport QuoteDetails from \"./Pages/QuoteDetails\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./Pages/NotFound\";\n\nimport {Route, Switch, Redirect} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <>\n     <Layout>\n      <Switch>\n      <Route path='/' exact>\n        <Redirect to='/quotes'/>\n      </Route>\n      <Route path='/quotes' exact>\n        <AllQuotes/>\n      </Route>\n      <Route path='/quotes/:quoteId'>\n        <QuoteDetails/>\n      </Route>\n      <Route path='/new-quote'>\n        <NewQuote/>\n      </Route>\n      <Route path='*'>\n        <NotFound />\n      </Route>\n    </Switch>\n     </Layout>\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter>\n    <App />\n</BrowserRouter>);\n"],"sourceRoot":""}