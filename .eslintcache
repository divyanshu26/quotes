[{"/home/divyanshu/projects/self/quotes/src/index.js":"1","/home/divyanshu/projects/self/quotes/src/App.js":"2","/home/divyanshu/projects/self/quotes/src/Pages/NewQuotes.js":"3","/home/divyanshu/projects/self/quotes/src/Pages/QuoteDetails.js":"4","/home/divyanshu/projects/self/quotes/src/Pages/NotFound.js":"5","/home/divyanshu/projects/self/quotes/src/Pages/AllQuotes.js":"6","/home/divyanshu/projects/self/quotes/src/components/layout/Layout.js":"7","/home/divyanshu/projects/self/quotes/src/components/quotes/QuoteForm.js":"8","/home/divyanshu/projects/self/quotes/src/components/quotes/HighlightedQuote.js":"9","/home/divyanshu/projects/self/quotes/src/components/quotes/QuoteList.js":"10","/home/divyanshu/projects/self/quotes/src/components/quotes/NoQuotesFound.js":"11","/home/divyanshu/projects/self/quotes/src/hooks/use-http.js":"12","/home/divyanshu/projects/self/quotes/src/lib/api.js":"13","/home/divyanshu/projects/self/quotes/src/components/comments/Comments.js":"14","/home/divyanshu/projects/self/quotes/src/components/UI/LoadingSpinner.js":"15","/home/divyanshu/projects/self/quotes/src/components/layout/MainNavigation.js":"16","/home/divyanshu/projects/self/quotes/src/components/UI/Card.js":"17","/home/divyanshu/projects/self/quotes/src/components/quotes/QuoteItem.js":"18","/home/divyanshu/projects/self/quotes/src/components/comments/NewCommentForm.js":"19","/home/divyanshu/projects/self/quotes/src/components/comments/CommentsList.js":"20","/home/divyanshu/projects/self/quotes/src/components/comments/CommentItem.js":"21"},{"size":266,"mtime":1648820678872,"results":"22","hashOfConfig":"23"},{"size":765,"mtime":1648988564972,"results":"24","hashOfConfig":"23"},{"size":747,"mtime":1649593728670,"results":"25","hashOfConfig":"23"},{"size":1783,"mtime":1649609058948,"results":"26","hashOfConfig":"23"},{"size":202,"mtime":1648988534030,"results":"27","hashOfConfig":"23"},{"size":1043,"mtime":1649594915181,"results":"28","hashOfConfig":"23"},{"size":288,"mtime":1648920316705,"results":"29","hashOfConfig":"23"},{"size":1683,"mtime":1648990740259,"results":"30","hashOfConfig":"23"},{"size":270,"mtime":1616596573000,"results":"31","hashOfConfig":"23"},{"size":1457,"mtime":1649593635580,"results":"32","hashOfConfig":"23"},{"size":333,"mtime":1649595239826,"results":"33","hashOfConfig":"23"},{"size":1246,"mtime":1649591057080,"results":"34","hashOfConfig":"23"},{"size":2229,"mtime":1649679959307,"results":"35","hashOfConfig":"23"},{"size":1805,"mtime":1649678921064,"results":"36","hashOfConfig":"23"},{"size":167,"mtime":1616596573000,"results":"37","hashOfConfig":"23"},{"size":853,"mtime":1649430143467,"results":"38","hashOfConfig":"23"},{"size":156,"mtime":1616596573000,"results":"39","hashOfConfig":"23"},{"size":454,"mtime":1648987359688,"results":"40","hashOfConfig":"23"},{"size":1236,"mtime":1649679959307,"results":"41","hashOfConfig":"23"},{"size":334,"mtime":1616596573000,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1616596573000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sk0gdi",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/divyanshu/projects/self/quotes/src/index.js",[],"/home/divyanshu/projects/self/quotes/src/App.js",[],"/home/divyanshu/projects/self/quotes/src/Pages/NewQuotes.js",[],"/home/divyanshu/projects/self/quotes/src/Pages/QuoteDetails.js",["88"],"import { Link } from 'react-router-dom';\nimport {useParams, Route, useRouteMatch} from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport useHttp from '../hooks/use-http';\nimport {getSingleQuote} from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { useEffect } from 'react';\n\nconst DUMMY_QUOTES = [\n    {id:'q1', author:'Aparna', text:'JS is single threaded'},\n    {id:'q2', author:'Divyanshu', text:'JS is single asynchronous'},\n];\n\n\nfunction QuoteDetails(){\nconst params = useParams();\nconst {quoteId} = params;\n\nconst {sendRequest,error,data:quote,status} = useHttp(getSingleQuote,true);\nconst route_match = useRouteMatch();\n//console.log(quote,status,error);\n//const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\nuseEffect(()=>{\n    sendRequest(quoteId);\n},[quoteId, sendRequest]);\n\nif(status ==='pending'){\n    return (\n        <div className='centered'>\n            <LoadingSpinner/>\n        </div>\n    );\n};\n\n\nif(error){\n    return (\n        <div className='centered'>\n        {error}\n    </div>\n    );\n}\n\nif(!('author' in quote)){\n    return (<div className='centered'>\n        <h1>No Quote found !!</h1>\n    </div>);\n};\n\n\nreturn (\n    <>\n        <HighlightedQuote text={quote.text} author={quote.author}/>\n        <Route path={`/quotes/${params.quoteId}`} exact>\n            <div className='centered'>\n                <Link className='btn--flat' to={`${route_match.url}/comments`}>\n                    Load Comments\n                </Link>\n            </div>\n        </Route>\n        <Route path={`${route_match.path}/comments`}>\n            <Comments/>\n        </Route>\n    </>\n);\n};\n\nexport default QuoteDetails;","/home/divyanshu/projects/self/quotes/src/Pages/NotFound.js",[],"/home/divyanshu/projects/self/quotes/src/Pages/AllQuotes.js",[],"/home/divyanshu/projects/self/quotes/src/components/layout/Layout.js",[],"/home/divyanshu/projects/self/quotes/src/components/quotes/QuoteForm.js",[],"/home/divyanshu/projects/self/quotes/src/components/quotes/HighlightedQuote.js",[],"/home/divyanshu/projects/self/quotes/src/components/quotes/QuoteList.js",[],"/home/divyanshu/projects/self/quotes/src/components/quotes/NoQuotesFound.js",[],"/home/divyanshu/projects/self/quotes/src/hooks/use-http.js",[],"/home/divyanshu/projects/self/quotes/src/lib/api.js",[],"/home/divyanshu/projects/self/quotes/src/components/comments/Comments.js",[],"/home/divyanshu/projects/self/quotes/src/components/UI/LoadingSpinner.js",[],"/home/divyanshu/projects/self/quotes/src/components/layout/MainNavigation.js",[],"/home/divyanshu/projects/self/quotes/src/components/UI/Card.js",[],"/home/divyanshu/projects/self/quotes/src/components/quotes/QuoteItem.js",[],"/home/divyanshu/projects/self/quotes/src/components/comments/NewCommentForm.js",["89","90"],"import { useRef , useEffect} from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const {sendRequest,status,data} = useHttp(addComment);\n  //console.log('commentform',data,status);\n\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    let comment = commentTextRef.current.value.trim();\n\n    if(comment){\n      //console.log(comment);\n      sendRequest({commentData : comment, quoteId: props.quoteId});\n    }\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  useEffect(()=>{\n    if(status === 'completed'){\n      props.commentAdded();\n      commentTextRef.current.value = '';\n    }\n  },[status]);\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} >\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","/home/divyanshu/projects/self/quotes/src/components/comments/CommentsList.js",[],"/home/divyanshu/projects/self/quotes/src/components/comments/CommentItem.js",[],{"ruleId":"91","severity":1,"message":"92","line":11,"column":7,"nodeType":"93","messageId":"94","endLine":11,"endColumn":19},{"ruleId":"91","severity":1,"message":"95","line":10,"column":29,"nodeType":"93","messageId":"94","endLine":10,"endColumn":33},{"ruleId":"96","severity":1,"message":"97","line":33,"column":5,"nodeType":"98","endLine":33,"endColumn":13,"suggestions":"99"},"no-unused-vars","'DUMMY_QUOTES' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["100"],{"desc":"101","fix":"102"},"Update the dependencies array to be: [props, status]",{"range":"103","text":"104"},[809,817],"[props, status]"]